{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\BrainStation\\\\Project-Folder\\\\Capstone\\\\fitness-script\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Home from \"./pages/Home\";\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport SelectWorkout from './components/SelectWorkout/SelectWorkout';\nimport CreateWorkout from './components/CreateWorkout/CreateWorkout';\nimport CreateExercise from './components/CreateExercise/CreateExercise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://pure-garden-23361.herokuapp.com' : 'http://localhost:8080';\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#101820' //background\n\n    },\n    primary: {\n      main: '#20B460' //medGreen\n\n    },\n    secondary: {\n      main: '#2074b4' //blue\n\n    },\n    error: {\n      main: '#701f16' //darkRed\n\n    },\n    delete: {\n      main: 'b42f20'\n    }\n  }\n});\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      workouts: [],\n      currentWorkoutExercises: [],\n      exercises: [],\n      workoutExercise: [],\n      id: null,\n      workoutName: null,\n      exerciseName: null,\n      muscle: null,\n      repsTime: null,\n      weight: null,\n      updated: false\n    };\n\n    this.displayErrorExerciseName = () => {\n      return this.state.exerciseName === \"\" ? true : false;\n    };\n\n    this.displayErrorRepsTime = () => {\n      return this.state.repsTime === \"\" ? true : false;\n    };\n\n    this.displayErrorMuscle = () => {\n      return this.state.muscle === \"\" ? true : false;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.exerciseObj = e => {\n      this.setState({\n        exerciseName: e.target.value\n      });\n    };\n\n    this.createWorkouts = () => {\n      axios.post(`${API_URL}/createWorkout`, {\n        workoutName: this.state.workoutName\n      }).then(() => {\n        axios.get(`${API_URL}/createWorkout`).then(response => {\n          this.setState({\n            workouts: response.data,\n            updated: true\n          });\n        });\n      });\n    };\n\n    this.workoutExerciseDisplay = () => {\n      const targetWorkout = this.state.workouts.slice(-1)[0].id;\n      const targetExercise = this.state.exercises.find(exObj => exObj.exerciseName === this.state.exerciseName).id;\n      axios.put(`${API_URL}/createWorkoutExercise`, {\n        workoutId: targetWorkout,\n        exerciseId: targetExercise\n      }).then(() => {\n        axios.get(`${API_URL}/createWorkoutExercise`, {}).then(response => {\n          this.setState({\n            workoutExercise: response.data\n          });\n          this.changeWorkout(targetWorkout);\n        });\n      });\n    };\n\n    this.changeWorkout = workoutId => {\n      const resultIds = this.state.workoutExercise.map(workoutExercise => workoutExercise.workoutId === workoutId ? workoutExercise.exerciseId : false);\n      const results = this.state.exercises.filter(exercise => resultIds.includes(exercise.id));\n      this.setState({\n        currentWorkoutExercises: results\n      });\n    };\n\n    this.createExercise = () => {\n      console.log(process.env.NODE_ENV);\n      axios.post(`${API_URL}/createExercise`, {\n        exerciseName: this.state.exerciseName,\n        muscle: this.state.muscle,\n        repsTime: this.state.repsTime,\n        weight: this.state.weight\n      }).then(response => {\n        axios.get(`${API_URL}/createExercise`).then(response => {\n          this.setState({\n            exercises: response.data,\n            updated: true\n          });\n        });\n      });\n    };\n\n    this.updateExercise = (e, id) => {\n      const newExerciseList = this.state.exercises.map(item => {\n        if (item.id === id) {\n          let updatedItem = { ...item\n          };\n          updatedItem[e.target.name] = e.target.value;\n          return updatedItem;\n        }\n\n        ;\n        return item;\n      });\n      this.setState({\n        exercises: newExerciseList\n      });\n      let ui = this.state.exercises.find(ex => ex.id === id);\n      axios.put(`${API_URL}/updateExercise/${ui.id}`, {\n        exerciseName: ui.exerciseName,\n        muscle: ui.muscle,\n        repsTime: ui.repsTime,\n        weight: ui.weight\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}/createExercise`).then(response => {\n      this.setState({\n        exercises: response.data\n      });\n    }).then(() => {\n      axios.get(`${API_URL}/createWorkout`).then(response => {\n        this.setState({\n          workouts: response.data\n        });\n      });\n    }).then(() => {\n      axios.get(`${API_URL}/createWorkoutExercise`).then(response => {\n        this.setState({\n          workoutExercise: response.data\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.updated !== this.state.updated) {\n      let ex = axios.get(`${API_URL}/createExercise`);\n      let wo = axios.get(`${API_URL}/createWorkout`);\n      let we = axios.get(`${API_URL}/createWorkoutExercise`);\n      axios.all([ex, wo, we]).then(axios.spread((...responses) => {\n        this.setState({\n          exercises: responses[0].data,\n          workouts: responses[1].data,\n          workoutExercise: responses[2].data,\n          updated: false\n        });\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: theme,\n            children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                exact: true,\n                render: () => /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signup\",\n                render: () => /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/home\",\n                render: true,\n                component: Home,\n                exercises: this.state.exercises\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/selectWorkout\",\n                render: () => /*#__PURE__*/_jsxDEV(SelectWorkout, {\n                  workouts: this.state.workouts,\n                  exercises: this.state.exercises,\n                  currentWorkoutExercises: this.state.currentWorkoutExercises,\n                  updateExercise: this.updateExercise,\n                  changeWorkout: this.changeWorkout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/createExercise\",\n                render: () => /*#__PURE__*/_jsxDEV(CreateExercise, {\n                  workouts: this.state.workouts,\n                  exercises: this.state.exercises,\n                  addExercise: this.addExercise,\n                  updateExercise: this.updateExercise,\n                  createExercise: this.createExercise,\n                  deleteExercise: this.deleteExercise,\n                  handleChange: this.handleChange,\n                  displayErrorExerciseName: this.displayErrorExerciseName,\n                  displayErrorMuscle: this.displayErrorMuscle,\n                  displayErrorRepsTime: this.displayErrorRepsTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/createWorkout\",\n                render: () => /*#__PURE__*/_jsxDEV(CreateWorkout, {\n                  workouts: this.state.workouts,\n                  currentWorkoutExercises: this.state.currentWorkoutExercises,\n                  exercises: this.state.exercises,\n                  handleChange: this.handleChange,\n                  exerciseObj: this.exerciseObj,\n                  createWorkouts: this.createWorkouts,\n                  updateExercise: this.updateExercise,\n                  changeWorkout: this.changeWorkout,\n                  workoutExerciseDisplay: this.workoutExerciseDisplay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Coding/BrainStation/Project-Folder/Capstone/fitness-script/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","axios","CssBaseline","createMuiTheme","ThemeProvider","Home","Login","Signup","SelectWorkout","CreateWorkout","CreateExercise","API_URL","process","env","NODE_ENV","theme","palette","background","default","primary","main","secondary","error","delete","App","state","workouts","currentWorkoutExercises","exercises","workoutExercise","id","workoutName","exerciseName","muscle","repsTime","weight","updated","displayErrorExerciseName","displayErrorRepsTime","displayErrorMuscle","handleChange","e","setState","target","name","value","exerciseObj","createWorkouts","post","then","get","response","data","workoutExerciseDisplay","targetWorkout","slice","targetExercise","find","exObj","put","workoutId","exerciseId","changeWorkout","resultIds","map","results","filter","exercise","includes","createExercise","console","log","updateExercise","newExerciseList","item","updatedItem","ui","ex","componentDidMount","componentDidUpdate","prevProps","prevState","wo","we","all","spread","responses","render","addExercise","deleteExercise"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter } from \"react-router-dom\"\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Home from \"./pages/Home\"\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\nimport SelectWorkout from './components/SelectWorkout/SelectWorkout'\nimport CreateWorkout from './components/CreateWorkout/CreateWorkout'\nimport CreateExercise from './components/CreateExercise/CreateExercise'\n\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://pure-garden-23361.herokuapp.com' : 'http://localhost:8080';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#101820', //background\n    },\n    primary: {\n      main: '#20B460', //medGreen\n    },\n    secondary: {\n      main: '#2074b4', //blue\n    },\n    error: {\n      main: '#701f16', //darkRed\n    },\n    delete: {\n      main: 'b42f20',\n    },\n  }\n});\n\nexport default class App extends Component {\n\n  state = {\n    workouts: [],\n    currentWorkoutExercises: [],\n    exercises: [],\n    workoutExercise: [],\n    id: null,\n    workoutName: null,\n    exerciseName: null,\n    muscle: null,\n    repsTime: null,\n    weight: null,\n    updated: false,\n  }\n\n  displayErrorExerciseName = () => {\n    return (this.state.exerciseName === \"\" ? true : false)\n  }\n  \n  displayErrorRepsTime = () => {\n    return (this.state.repsTime === \"\" ? true : false)\n  }\n  \n  displayErrorMuscle = () => {\n    return (this.state.muscle === \"\" ? true : false)\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  exerciseObj = (e) => {\n    this.setState({\n      exerciseName: e.target.value\n    })\n  }\n\n  createWorkouts = () => {\n    axios.post(`${API_URL}/createWorkout`, {\n      workoutName: this.state.workoutName,\n\n    }).then(() => {\n      axios.get(`${API_URL}/createWorkout`).then((response) => {\n        this.setState({\n          workouts: response.data,\n          updated: true,\n        });\n      });\n    });\n  };\n\n  workoutExerciseDisplay = () => {\n    const targetWorkout = this.state.workouts.slice(-1)[0].id;\n    const targetExercise = this.state.exercises.find(exObj => exObj.exerciseName === this.state.exerciseName).id;\n\n    axios.put(`${API_URL}/createWorkoutExercise`, {\n      workoutId: targetWorkout,\n      exerciseId: targetExercise,\n    }).then(() => {\n      axios.get(`${API_URL}/createWorkoutExercise`, {\n      }).then((response) => {\n        this.setState({\n          workoutExercise: response.data\n        })\n\n        this.changeWorkout(targetWorkout)\n      })\n    })\n  }\n\n  changeWorkout = (workoutId) => {\n    const resultIds = this.state.workoutExercise.map(workoutExercise => workoutExercise.workoutId === workoutId ? workoutExercise.exerciseId : false);\n    const results = this.state.exercises.filter(exercise => resultIds.includes(exercise.id));\n\n    this.setState({\n      currentWorkoutExercises: results\n    });\n  }\n\n  createExercise = () => {\n    console.log(process.env.NODE_ENV);\n    axios.post(`${API_URL}/createExercise`, {\n      exerciseName: this.state.exerciseName,\n      muscle: this.state.muscle,\n      repsTime: this.state.repsTime,\n      weight: this.state.weight\n    }).then((response) => {\n      axios.get(`${API_URL}/createExercise`).then((response) => {\n        this.setState({\n          exercises: response.data,\n          updated: true,\n        });\n      });\n    });\n  };\n\n  updateExercise = (e, id) => {\n    const newExerciseList = this.state.exercises.map((item) => {\n      if (item.id === id) {\n        let updatedItem = {\n          ...item\n        }\n        updatedItem[e.target.name] = e.target.value\n        return updatedItem;\n      };\n      return item;\n    })\n    this.setState({ exercises: newExerciseList })\n    let ui = this.state.exercises.find((ex) => ex.id === id)\n\n    axios.put(`${API_URL}/updateExercise/${ui.id}`, {\n      exerciseName: ui.exerciseName,\n      muscle: ui.muscle,\n      repsTime: ui.repsTime,\n      weight: ui.weight\n    })\n  };\n\n  componentDidMount() {\n    axios.get(`${API_URL}/createExercise`).then((response) => {\n\n      this.setState({\n        exercises: response.data,\n      });\n    }).then(() => {\n      axios.get(`${API_URL}/createWorkout`).then((response) => {\n\n        this.setState({\n          workouts: response.data\n        });\n      });\n    }).then(() => {\n      axios.get(`${API_URL}/createWorkoutExercise`).then((response) => {\n\n        this.setState({\n          workoutExercise: response.data\n        });\n      });\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.updated !== this.state.updated) {\n\n      let ex = axios.get(`${API_URL}/createExercise`)\n      let wo = axios.get(`${API_URL}/createWorkout`)\n      let we = axios.get(`${API_URL}/createWorkoutExercise`)\n      axios.all([ex, wo, we])\n        .then(\n          axios.spread((...responses) => {\n            this.setState({\n              exercises: responses[0].data,\n              workouts: responses[1].data,\n              workoutExercise: responses[2].data,\n              updated: false,\n            });\n          })\n        )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <BrowserRouter>\n          <Router className=\"App\">\n            <ThemeProvider theme={theme}>\n              <CssBaseline />\n\n              <Switch>\n                <Route path='/' exact\n                  render={() => <Login />}\n                />\n                <Route path='/signup'\n                  render={() => <Signup />}\n                />\n                <Route path='/home' \n                render\n                  component={Home} \n                  exercises={this.state.exercises}\n                />\n                <Route path='/selectWorkout'\n                  render={() => <SelectWorkout\n                    workouts={this.state.workouts}\n                    exercises={this.state.exercises}\n                    currentWorkoutExercises={this.state.currentWorkoutExercises}\n                    updateExercise={this.updateExercise}\n                    changeWorkout={this.changeWorkout}\n                  />}\n                />\n\n                <Route path='/createExercise'\n                  render={() => <CreateExercise\n                    workouts={this.state.workouts}\n                    exercises={this.state.exercises}\n                    addExercise={this.addExercise}\n                    updateExercise={this.updateExercise}\n                    createExercise={this.createExercise}\n                    deleteExercise={this.deleteExercise}\n                    handleChange={this.handleChange}\n                    displayErrorExerciseName={this.displayErrorExerciseName}\n                    displayErrorMuscle={this.displayErrorMuscle}\n                    displayErrorRepsTime={this.displayErrorRepsTime}\n                  />}\n                />\n                <Route path='/createWorkout'\n                  render={() => <CreateWorkout\n                    workouts={this.state.workouts}\n                    currentWorkoutExercises={this.state.currentWorkoutExercises}\n                    exercises={this.state.exercises}\n                    handleChange={this.handleChange}\n                    exerciseObj={this.exerciseObj}\n                    createWorkouts={this.createWorkouts}\n                    updateExercise={this.updateExercise}\n                    changeWorkout={this.changeWorkout}\n                    workoutExerciseDisplay={this.workoutExerciseDisplay}\n                  />}\n                />\n              </Switch>\n\n            </ThemeProvider>\n          </Router>\n        </BrowserRouter>\n      </div>\n    )\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}